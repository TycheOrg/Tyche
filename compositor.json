{
  "name": "TycheOrg/Tyche",
  "version": "0.1.4",
  "libraries": {
    "xv": "^1.1.25"
  },
  "title": "",
  "branch": "",
  "style": {
    "name": "Material",
    "componentSet": {
      "nav": "nav/DarkAbsoluteNav",
      "header": "header/GradientHeader",
      "article": "article/BasicArticle",
      "footer": "footer/BasicFooter"
    },
    "fontFamily": "Roboto, sans-serif",
    "heading": {
      "fontWeight": 500,
      "letterSpacing": "-0.01em"
    },
    "colors": {
      "text": "#212121",
      "background": "#fff",
      "primary": "#2196f3",
      "secondary": "#1565c0",
      "highlight": "#ff4081",
      "border": "#e0e0e0",
      "muted": "#f5f5f5"
    },
    "layout": {
      "centered": true,
      "bannerHeight": "80vh",
      "maxWidth": 896
    }
  },
  "content": [
    {
      "component": "nav",
      "links": [
        {
          "href": "https://github.com/TycheOrg/Tyche",
          "text": "GitHub"
        }
      ]
    },
    {
      "component": "header",
      "heading": "Tyche",
      "subhead": null,
      "children": [
        {
          "component": "ui/TweetButton",
          "text": "Tyche: ",
          "url": null
        },
        {
          "component": "ui/GithubButton",
          "user": "TycheOrg",
          "repo": "Tyche"
        }
      ]
    },
    {
      "component": "article",
      "metadata": {
        "source": "github.readme"
      },
      "html": "\n\n<p><a href=\"https://gitter.im/TycheOrg/Tyche?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img src=\"https://badges.gitter.im/TycheOrg/Tyche.svg\"></a>  <a href=\"https://www.nuget.org/packages/Tyche/\"><img src=\"https://img.shields.io/nuget/v/Tyche.svg\"></a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Tyche\">Tyche</a> was the Greek god of fortune. (In Rome she is know as Fortuna). Her symbol was the Cornucopia, hence the logo</p>\n<p>Tyche can be used to generate random names for releases or anything else your :heart: may desire.</p>\n<p>Names are generated as pairs along the following theme: <code>{morpheme} {item from a given (or randomized) category}</code>.\nEach name that is generated is stored so as to ensure names are unique.</p>\n<h2>TOC</h2>\n<ul>\n<li><a href=\"#contributions\">Contributions</a></li>\n<li><a href=\"#general\">General</a></li>\n<li><a href=\"#api\">API</a><ul>\n<li><a href=\"#generate\">Generate</a><ul>\n<li><a href=\"#category-specified\">Category Specified</a></li>\n<li><a href=\"#no-fail-on-invalid-category\">No Fail on invalid category</a></li>\n</ul>\n</li>\n<li><a href=\"#getavailablecategories\">GetAvailableCategories</a></li>\n<li><a href=\"#savepreviousnames\">SavePreviousNames</a></li>\n<li><a href=\"#resetpreviousnames\">ResetPreviousNames</a></li>\n</ul>\n</li>\n<li><a href=\"#source\">Source</a></li>\n<li><a href=\"#see-also\">See Also</a></li>\n<li><a href=\"#license\">License</a></li>\n</ul>\n<h2>Contributions</h2>\n<p>Contributions are quite welcome. Please just read the <a href=\"CONTRIBUTING.md\">Guidelines</a> first.</p>\n<h2>General</h2>\n<p>If no <a href=\"#source\">source</a> is provided then the default data source will be used.</p>\n<h2>API</h2>\n<h3>Generate</h3>\n<p>This basic sample will use the default data set to create a name, using a random category.</p>\n<pre>var g = new Generator();\n\nvar name = g.Generate();</pre><h4>Category Specified</h4>\n<p>The generator will use the category provided to pick the second half of the name from.</p>\n<pre>var g = new Generator();\n\nvar name = g.Generate(&quot;Mammals&quot;);</pre><h4>No Fail on invalid category</h4>\n<p>If the category passed in is invalid, instead of failing a random category will be picked to use instead.</p>\n<pre>var g = new Generator();\n\nvar name = g.Generate(&quot;Non-existent Category&quot;, false);</pre><h3>GetAvailableCategories</h3>\n<p>Gets the list of categories available from the source.</p>\n<pre>var g = new Generator();\n\nvar allCategories = g.GetAvailableCategories();</pre><h3>SavePreviousNames</h3>\n<p>Persists the current list of previously generated name.\nThe persistence model is defined by the source used when creating the generator.</p>\n<pre>var g = new Generator();\n\ng.SavePreviousNames();</pre><h3>ResetPreviousNames</h3>\n<p>Clears the list of previously generated names that is currently held by the source.\n<strong>Do not rely on the source implementing a save within this method. Use it as shown in the sample.</strong></p>\n<pre>var g = new Generator();\n\ng.ResetPreviousNames();\ng.SavePreviousNames();</pre><h2>Source</h2>\n<p>Please see the <a href=\"docs\">docs</a> to learn about the <code>Source</code> api, and how to write your own.</p>\n<h2>Future</h2>\n<p>Please see the <a href=\"Roadmap.md\">Roadmap</a> to see what the future may hold for Tyche.</p>\n<h2>See Also</h2>\n<p>See <a href=\"https://github.com/TycheOrg/Home\">TycheOrg home repo</a> for a general road-map of the ecosystem.</p>\n<h2>License</h2>\n<p>This project is released under the MIT License. <br> Please refer to the <a href=\"LICENSE\">LICENSE file</a> for full details.</p>\n"
    },
    {
      "component": "footer",
      "links": [
        {
          "href": "https://github.com/TycheOrg/Tyche",
          "text": "GitHub"
        },
        {
          "href": "https://github.com/TycheOrg",
          "text": "TycheOrg"
        }
      ]
    }
  ]
}